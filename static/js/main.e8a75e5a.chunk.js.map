{"version":3,"sources":["hooks/useToggleState.js","hooks/useInputState.js","EditTodoForm.js","Todo.js","TodoList.js","TodoForm.js","hooks/useTodoState.js","TodoApp.js","index.js"],"names":["useToggle","initialVal","useState","state","setState","toggle","useInputState","value","setValue","e","target","EditTodoForm","id","task","editTodo","toggleEditForm","handleChange","reset","onSubmit","preventDefault","style","marginLeft","width","type","margin","onChange","autoFocus","color","Todo","completed","removeTodo","toggleTodo","useToggleState","isEditing","marginTop","tabIndex","checked","fontWeight","float","aria-label","onClick","padding","height","TodoList","todos","length","listStyleType","map","todo","i","display","background","key","TodoForm","addTodo","placeholder","label","useTodoState","initialTodos","setTodos","newTodoText","uuid","todoId","updatedTodos","filter","newTask","TodoApp","JSON","parse","window","localStorage","getItem","useEffect","setItem","stringify","maxWidth","paddingTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAUeA,MATf,WAAwC,IAArBC,EAAoB,0DAEXC,mBAASD,GAFE,mBAE9BE,EAF8B,KAEvBC,EAFuB,KAG/BC,EAAS,WACbD,GAAUD,IAGZ,MAAO,CAACA,EAAOE,ICWFC,MAdf,SAAuBL,GAAa,IAAD,EACPC,mBAASD,GADF,mBAC1BM,EAD0B,KACnBC,EADmB,KAWjC,MAAO,CAACD,EARa,SAACE,GACpBD,EAASC,EAAEC,OAAOH,QAGN,WACZC,EAAS,O,OCcEG,MAxBf,YAA+D,IAAvCC,EAAsC,EAAtCA,GAAIC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,eAAkB,EACvBT,EAAcO,GADS,mBACrDN,EADqD,KAC9CS,EAD8C,KAChCC,EADgC,KAE5D,OACE,sBACEC,SAAU,SAACT,GACTA,EAAEU,iBACFL,EAASF,EAAIL,GACbU,IACAF,KAEFK,MAAO,CAAEC,WAAY,OAAQC,MAAO,OAPtC,SASE,uBACEC,KAAK,OACLC,OAAO,SACPjB,MAAOA,EACPkB,SAAUT,EAEVU,WAAS,EACTN,MAAO,CAACO,MAAM,OAAQL,MAAM,YCmDrBM,MArEf,YAA0E,IAA1DhB,EAAyD,EAAzDA,GAAIC,EAAqD,EAArDA,KAAMgB,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,WAAYjB,EAAY,EAAZA,SAAY,EAC3CkB,GAAe,GAD4B,mBAChEC,EADgE,KACrD5B,EADqD,KAEvE,OACE,8BACG4B,EACC,cAAC,EAAD,CACEnB,SAAUA,EACVF,GAAIA,EACJC,KAAMA,EACNE,eAAgBV,IAGlB,mCAEE,uBAAMe,MAAO,CAAEc,UAAW,QAA1B,UACE,uBACEX,KAAK,WACLY,UAAW,EACXC,QAASP,EAETJ,SAAU,kBAAMM,EAAWnB,MAE7B,sBACEQ,MAAO,CACLC,WAAY,MAEZgB,WAAaR,EAAqB,UAAT,UAJ7B,SAQGhB,IAGH,uBAAMO,MAAO,CAAEC,WAAY,OAAQiB,MAAO,SAA1C,UACE,wBACEC,aAAW,SACXC,QAAS,kBAAMV,EAAWlB,IAC1BQ,MAAO,CAELc,UAAW,EACXb,WAAY,EACZoB,QAAS,EACTnB,MAAO,OACPoB,OAAQ,QATZ,oBAcA,wBACEH,aAAW,OACXC,QAASnC,EACTe,MAAO,CACLc,UAAW,EACXb,WAAY,EACZoB,QAAS,EACTnB,MAAO,OACPoB,OAAQ,QARZ,6BCdCC,MAnCf,YAAgE,IAA5CC,EAA2C,EAA3CA,MAAOd,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,WAAYjB,EAAY,EAAZA,SACjD,OAAI8B,EAAMC,OAEN,8BACE,oBAAIzB,MAAO,CAAEI,OAAQ,WAAYiB,QAAS,EAAGK,cAAe,QAA5D,SACGF,EAAMG,KAAI,SAACC,EAAMC,GAAP,OAGT,aAFA,CAEA,MAEE7B,MAAO,CACL8B,QAAS,OACTT,QAAS,EAGTU,WAAYF,EAAE,EAAE,UAAU,WAP9B,SAWE,wBAAC,EAAD,2BACMD,GADN,IAEEI,IAAKJ,EAAKpC,GACVkB,WAAYA,EACZC,WAAYA,EACZjB,SAAUA,MAfPmC,UAwBV,MCXMI,MAtBf,YAAgC,IAAZC,EAAW,EAAXA,QAAW,EACQhD,EAAc,IADtB,mBACtBC,EADsB,KACfS,EADe,KACDC,EADC,KAE7B,OACI,sBAAMG,MAAO,CAACC,WAAW,GACvBH,SAAU,SAACT,GACTA,EAAEU,iBACFmC,EAAQ/C,GACRU,KAJJ,SAOE,uBACEM,KAAK,OACLhB,MAAOA,EACPgD,YAAY,gCACZ9B,SAAUT,EACVwC,MAAM,eACN9B,WAAW,EACXN,MAAO,CAACE,MAAM,MAAOmB,QAAQ,a,eCmBxBgB,MAhCf,SAAsBC,GAAe,IAAD,EACRxD,mBAASwD,GADD,mBAC3Bd,EAD2B,KACpBe,EADoB,KAIlC,MAAO,CACLf,QACAU,QAAS,SAACM,GAERD,EAAS,GAAD,mBAAKf,GAAL,CAAY,CAAEhC,GAAIiD,cAAQhD,KAAM+C,EAAa/B,WAAW,OAElEC,WAAY,SAACgC,GAEX,IAAMC,EAAenB,EAAMoB,QAAO,SAAChB,GAAD,OAAUA,EAAKpC,KAAOkD,KACxDH,EAASI,IAEXhC,WAAY,SAAC+B,GAEX,IAAMC,EAAenB,EAAMG,KAAI,SAACC,GAAD,OAC7BA,EAAKpC,KAAOkD,EAAZ,2BAA0Bd,GAA1B,IAAgCnB,WAAYmB,EAAKnB,YAAcmB,KAEjEW,EAASI,IAEXjD,SAAU,SAACgD,EAAQG,GAEjB,IAAMF,EAAenB,EAAMG,KAAI,SAACC,GAAD,OAC7BA,EAAKpC,KAAOkD,EAAZ,2BAA0Bd,GAA1B,IAAgCnC,KAAMoD,IAAYjB,KAEpDW,EAASI,MCSAG,MAlCf,WACE,IAAMR,EAAeS,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,UAAY,MADvD,EAE4Cd,EAC3DC,GADMd,EAFS,EAETA,MAAOU,EAFE,EAEFA,QAASxB,EAFP,EAEOA,WAAYC,EAFnB,EAEmBA,WAAYjB,EAF/B,EAE+BA,SAQhD,OAJA0D,qBAAU,WACRH,OAAOC,aAAaG,QAAQ,QAASN,KAAKO,UAAU9B,MACnD,CAACA,IAGF,sBACExB,MAAO,CACLI,OAAQ,OACRU,UAAW,OACXyC,SAAU,QACVlC,QAAS,OACTmC,WAAY,SACZzB,WAAY,UACZxB,MAAM,WARV,UAWE,2DACA,oBAAIP,MAAO,CAACO,MAAM,WAAlB,wEACA,cAAC,EAAD,CAAU2B,QAASA,IACnB,cAAC,EAAD,CACEV,MAAOA,EACPd,WAAYA,EACZC,WAAYA,EACZjB,SAAUA,QCjClB+D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e8a75e5a.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nfunction useToggle(initialVal = false) {\r\n  // call useState, \"reserve piece of state\"\r\n  const [state, setState] = useState(initialVal);\r\n  const toggle = () => {\r\n    setState(!state);\r\n  };\r\n  // return piece of state AND a function to toggle it\r\n  return [state, toggle];\r\n}\r\nexport default useToggle;\r\n","import { useState } from \"react\";\r\n\r\n// export default (initialVal) => {\r\n// const useInputState = (initialVal) => {\r\n\r\nfunction useInputState(initialVal) {\r\n  const [value, setValue] = useState(initialVal);\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const reset = () => {\r\n    setValue(\"\");\r\n  };\r\n  \r\n  return [value, handleChange, reset];\r\n}\r\n\r\nexport default useInputState;\r\n","import React from \"react\";\r\nimport useInputState from \"./hooks/useInputState\";\r\n\r\nfunction EditTodoForm({ id, task, editTodo, toggleEditForm }) {\r\n  const [value, handleChange, reset] = useInputState(task);\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        editTodo(id, value);\r\n        reset();\r\n        toggleEditForm();\r\n      }}\r\n      style={{ marginLeft: \"1rem\", width: \"50%\" }}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        margin=\"normal\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        // fullWidth\r\n        autoFocus\r\n        style={{color:\"blue\", width:\"80%\"}}\r\n      />\r\n    </form>\r\n  );\r\n}\r\nexport default EditTodoForm;\r\n","import React from \"react\";\r\nimport useToggleState from \"./hooks/useToggleState\";\r\nimport EditTodoForm from \"./EditTodoForm\";\r\n\r\nfunction Todo({ id, task, completed, removeTodo, toggleTodo, editTodo }) {\r\n  const [isEditing, toggle] = useToggleState(false);\r\n  return (\r\n    <div>\r\n      {isEditing ? (\r\n        <EditTodoForm\r\n          editTodo={editTodo}\r\n          id={id}\r\n          task={task}\r\n          toggleEditForm={toggle}\r\n        />\r\n      ) : (\r\n        <>\r\n          {/* style for the entire task */}\r\n          <span style={{ marginTop: \"10px\" }}>\r\n            <input\r\n              type=\"checkbox\"\r\n              tabIndex={-1}\r\n              checked={completed}\r\n              // onClick={() => toggleTodo(id)}\r\n              onChange={() => toggleTodo(id)}\r\n            />\r\n            <span\r\n              style={{\r\n                marginLeft: \"5px\",\r\n                // textDecoration: completed ? \"line-through\" : \"none\",\r\n                fontWeight: !completed ? \"normal\":\"lighter\",\r\n                // color: completed ? \"green\" : \"red\",\r\n              }}\r\n            >\r\n              {task}\r\n            </span>\r\n            {/* </span> */}\r\n            <span style={{ marginLeft: \"auto\", float: \"right\" }}>\r\n              <button\r\n                aria-label=\"Delete\"\r\n                onClick={() => removeTodo(id)}\r\n                style={{\r\n                  // margin: \"10, 0, 0, 5\",\r\n                  marginTop: 5,\r\n                  marginLeft: 5,\r\n                  padding: 0,\r\n                  width: \"60px\",\r\n                  height: \"25px\",\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n              <button\r\n                aria-label=\"Edit\"\r\n                onClick={toggle}\r\n                style={{\r\n                  marginTop: 5,\r\n                  marginLeft: 5,\r\n                  padding: 0,\r\n                  width: \"60px\",\r\n                  height: \"25px\",\r\n                }}\r\n              >\r\n                Edit\r\n              </button>\r\n            </span>\r\n          </span>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nfunction TodoList({ todos, removeTodo, toggleTodo, editTodo }) {\r\n  if (todos.length)\r\n    return (\r\n      <div>\r\n        <ul style={{ margin: \"20 0 0 0\", padding: 0, listStyleType: \"none\" }}>\r\n          {todos.map((todo, i) => (\r\n            // To add a key to a fragment, we have to use the long-hand version\r\n            // rather than <> </>, we have to use <React.Fragment>\r\n            <li\r\n              key={i}\r\n              style={{\r\n                display: \"grid\",\r\n                padding: 4,\r\n                // marginBottom: \"15px\",\r\n                // background: i % 2 ? \"#c2cad0\" : \"#afd275\",\r\n                background: i%2?\"#ddaf94\":\"#e8cebf\"\r\n              }}\r\n            >\r\n              {/* <React.Fragment key={i}> */}\r\n              <Todo\r\n                {...todo}\r\n                key={todo.id}\r\n                removeTodo={removeTodo}\r\n                toggleTodo={toggleTodo}\r\n                editTodo={editTodo}\r\n              />\r\n              {/* {i < todos.length - 1 && <hr />} */}\r\n              {/* </React.Fragment> */}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  return null;\r\n}\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport useInputState from \"./hooks/useInputState\";\r\n\r\nfunction TodoForm({ addTodo }) {\r\n  const [value, handleChange, reset] = useInputState(\"\");\r\n  return (\r\n      <form style={{marginLeft:0}}\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addTodo(value);\r\n          reset();\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          placeholder=\"Type new todo and press enter\"\r\n          onChange={handleChange}\r\n          label=\"Add New Todo\"\r\n          autoFocus={true}\r\n          style={{width:\"90%\", padding:\"10px\"}}\r\n        />\r\n      </form>\r\n  );\r\n}\r\nexport default TodoForm;\r\n","import { useState } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\n// export default (initialTodos) => { // this no longer works\r\n// const useTodoState = (initialTodos) => { // this does work\r\n\r\n// initialTodos come from TodoApp.js\r\nfunction useTodoState(initialTodos) {\r\n  const [todos, setTodos] = useState(initialTodos);\r\n\r\n  // return an object containing the todos array and the functions to work on it\r\n  return {\r\n    todos,\r\n    addTodo: (newTodoText) => {\r\n      // unwrap the todos array, add a new todo object on the end, and set the updated state\r\n      setTodos([...todos, { id: uuid(), task: newTodoText, completed: false }]);\r\n    },\r\n    removeTodo: (todoId) => {\r\n      // retrieve all of the todos except the ones matching todoId\r\n      const updatedTodos = todos.filter((todo) => todo.id !== todoId);\r\n      setTodos(updatedTodos);\r\n    },\r\n    toggleTodo: (todoId) => {\r\n      // loop through each todo and toggle the completed property if matching todoId\r\n      const updatedTodos = todos.map((todo) =>\r\n        todo.id === todoId ? { ...todo, completed: !todo.completed } : todo\r\n      );\r\n      setTodos(updatedTodos);\r\n    },\r\n    editTodo: (todoId, newTask) => {\r\n      // loop through each todo and update the task property if matching todoId\r\n      const updatedTodos = todos.map((todo) =>\r\n        todo.id === todoId ? { ...todo, task: newTask } : todo\r\n      );\r\n      setTodos(updatedTodos);\r\n    },\r\n  };\r\n}\r\n\r\nexport default useTodoState;\r\n","import React, { useEffect } from \"react\";\r\nimport TodoList from \"./TodoList\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport useTodoState from \"./hooks/useTodoState\";\r\n\r\n// function initialTodos() {\r\n//   return JSON.parse(window.localStorage.getItem(\"todos\") || \"[]\");\r\n// }\r\n\r\nfunction TodoApp() {\r\n  const initialTodos = JSON.parse(window.localStorage.getItem(\"todos\") || \"[]\");\r\n  const { todos, addTodo, removeTodo, toggleTodo, editTodo } = useTodoState(\r\n    initialTodos\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"auto\",\r\n        marginTop: \"1rem\",\r\n        maxWidth: \"800px\",\r\n        padding: \"1rem\",\r\n        paddingTop: \"0.1rem\",\r\n        background: \"#fdf8f5\",\r\n        color:\"#4f4846\",\r\n      }}\r\n    >\r\n      <h1>JP2 TODO HOOKS SIMPLIFIED</h1>\r\n      <h2 style={{color:\"#266150\"}}>Updated, styled, and simplified by JP ... work in progress</h2>\r\n      <TodoForm addTodo={addTodo} />\r\n      <TodoList\r\n        todos={todos}\r\n        removeTodo={removeTodo}\r\n        toggleTodo={toggleTodo}\r\n        editTodo={editTodo}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default TodoApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport TodoApp from './TodoApp'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <TodoApp />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}